<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"  href="testcase.xsl"?>
<test_definition>
  <suite name="tct-appwgt-wrt-tests" category="Web Runtime">
    <set name="WebAppWidget" type="script">
      <testcase purpose="Check that WRT must support Web AppWidget installation." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="app-widget-install">
        <description>
          <pre_condition></pre_condition>
          <post_condition></post_condition>
          <steps>
            <step order="1">
              <step_desc>Check that WRT supports the Web AppWidget installation.</step_desc>
              <expected>WRT supports the Web AppWidget installation.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">app_user@/home/app/content/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_install.sh</test_script_entry>
          <notes></notes>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="0900" specification="Web AppWidget Package Management (Install, Uninstall, Update)" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_url></spec_url>
            <spec_statement>WRT MUST install Web AppWidget on the time that its Web Application is installed.</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check that the WRT must support Web AppWidget uninstallation." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="app-widget-uninstall">
        <description>
          <pre_condition></pre_condition>
          <post_condition></post_condition>
          <steps>
            <step order="1">
              <step_desc>Check if the WRT supports Web AppWidget uninstallation.</step_desc>
              <expected>The WRT supports Web AppWidget uninstallation.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">app_user@/home/app/content/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_uninstall.sh</test_script_entry>
          <notes></notes>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="0910" specification="Web AppWidget Package Management (Install, Uninstall, Update)" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_url></spec_url>
            <spec_statement>The WRT MUST support Web AppWidget uninstallation.</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check that WRT does not allow Web AppWidget which is signed with an invalid signature to be installed." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="app-widget-signature-invalid">
        <description>
          <pre_condition></pre_condition>
          <post_condition></post_condition>
          <steps>
            <step order="1">
              <step_desc>Check if WRT does not allow Web AppWidget which is signed with an invalid signature to be installed.</step_desc>
              <expected>WRT does not allow Web AppWidget which is signed with an invalid signature to be installed.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">app_user@/home/app/content/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_installfail.sh app-widget-signature-invalid.wgt</test_script_entry>
          <notes></notes>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="1100" specification="Web AppWidget Security and Privacy" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_url></spec_url>
            <spec_statement>When Web Application is unstalled, instances of its Web AppWidget on AppWidget Viewer SHOULD be all removed</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if widget have valid signature, the widget can be install." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="sp-widget-valid-signature">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install sp-widget-valid-signature.wgt.</step_desc>
              <expected>Widget application can be installed.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/usr/media/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_install_valid_signature.sh</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="0640" specification="Widget Signature" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_statement>When Web Application is unstalled, instances of its Web AppWidget on AppWidget Viewer SHOULD be all removed</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if widget only contained author signature, the widget can be install." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="sp-widget-only-author-signature">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install sp-widget-only-author-signature.wgt.</step_desc>
              <expected>Widget application can be installed.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/usr/media/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_install_only_author_signature.sh</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="0640" specification="Widget Signature" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_statement>When Web Application is unstalled, instances of its Web AppWidget on AppWidget Viewer SHOULD be all removed</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if widget does not included signature, the widget can be install." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="sp-widget-no-signature">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install sp-widget-no-signature.wgt.</step_desc>
              <expected>Widget application can be installed.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/usr/media/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_install_no_signature.sh</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="0630" specification="Widget Signature" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_statement>When Web Application is unstalled, instances of its Web AppWidget on AppWidget Viewer SHOULD be all removed</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase purpose="Check if widget have invalid signature, the widget can not be install." type="Functional positive" status="designed" component="Web/Runtime/WebAppWidget" execution_type="auto" priority="P1" id="sp-widget-invalid-signature">
        <description>
          <steps>
            <step order="1">
              <step_desc>Install sp-widget-invalid-signature.wgt.</step_desc>
              <expected>Widget application can not be installed.</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0">/opt/usr/media/tct/opt/tct-appwgt-wrt-tests/scripts/wrt_appwgt_installfail.sh sp-widget-invalid-signature.wgt</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="attribute" element_name="N/A" interface="0620" specification="Widget Signature" section="Web AppWidget" category="Tizen WRT Core Specifications"></spec_assertion>
            <spec_statement>When Web Application is unstalled, instances of its Web AppWidget on AppWidget Viewer SHOULD be all removed</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
  </suite>
</test_definition>
